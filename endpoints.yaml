openapi: 3.0.0
info:
  title: ClassConnect Courses Service API
  version: 1.0.0

paths:

  /courses:
    post:
      summary: Create a new course
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourseRequest'
      responses:
        '201':
          description: Course created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Course'
        '400':
          description: Bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: Retrieve all courses
      responses:
        '200':
          description: A list of courses
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Course'

  /courses/{id}:
    get:
      summary: Retrieve a course by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Course retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Course'
        '404':
          description: Course not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    delete:
      summary: Delete a course by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Course deleted successfully
        '404':
          description: Course not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    patch:
      summary: Update a course by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCourseRequest'
      responses:
        '200':
          description: Course updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Course'
        '400':
          description: Bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Course not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
  /courses/{id}/modules:
    post:
      summary: Create a new module for a course
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateModuleRequest'
      responses:
        '201':
          description: Module created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Module'
        '400':
          description: Bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    get:
      summary: Retrieve all modules for a course
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of modules
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Module'
  
  /courses/{id}/modules/order: #Falta definir mejor
    patch:
      summary: Update the order of modules for a course
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Order updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Module'
        '400':
          description: Bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      
  /courses/{id}/modules/{moduleId}:
    get:
      summary: Retrieve a module by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: moduleId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Module retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Module'
        '404':
          description: Module not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    delete:
      summary: Delete a module by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: moduleId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Module deleted successfully
        '404':
          description: Module not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      summary: Update a module by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: moduleId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Module'
      responses:
        '200':
          description: Module updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Module'
        '400':
          description: Bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Module not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /courses/{id}/enrollments:
    post:
      summary: Enroll a user in a course
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnrollmentRequest'
      responses:
        '201':
          description: Enrollment created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Enrollment'
        '400':
          description: Bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /courses/{id}/enrollments/{userId}:
    get:
      summary: Check if a user is enrolled in a course
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Enrollment status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  isEnrolled:
                    type: boolean
        '404':
          description: Course or user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /users/{userId}/courses:
    get:
      summary: Retrieve all courses for a user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of courses for the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Course'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  



components:
  schemas:
    Course:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        shortDescription:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        capacity:
          type: integer
        enrolled:
          type: integer
        category:
          type: string
        level:
          type: string
        modality:
          type: string
        prerequisites:
          type: array
          items:
            type: string
        imageUrl:
          type: string
        creatorId:
          type: string

    CreateCourseRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        shortDescription:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        capacity:
          type: integer
        enrolled:
          type: integer
        category:
          type: string
        level:
          type: string
        modality:
          type: string
        prerequisites:
          type: array
          items:
            type: string
        imageUrl:
          type: string
        creatorId:
          type: string

    ErrorResponse:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string

    Instructor:
      type: object
      properties:
        name:
          type: string
        profile:
          type: string
    
    UpdateCourseRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        shortDescription:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        instructor:
          $ref: '#/components/schemas/Instructor'
        capacity:
          type: integer
        enrolled:
          type: integer
        category:
          type: string
        level:
          type: string
        modality:
          type: string
        prerequisites:
          type: array
          items:
            type: string
        isEnrrolled:
          type: boolean
        imageUrl:
          type: string

    CreateModuleRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        url:
          type: string
        order:
          type: number
        courseId:
          type: string

    Module:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        url:
          type: string
        order:
          type: number
        courseId:
          type: string

    Enrollment:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        courseId:
          type: string
        enrollmentDate:
          type: string
      
    CreateEnrollmentRequest:
      type: object
      properties:
        userId:
          type: string